variables:
  POSTGRES_HOST_AUTH_METHOD: trust
  CARGO_HOME: $CI_PROJECT_DIR/.cargo
  TESTCONTAINERS_HOST_OVERRIDE: "host.docker.internal"

image: "harbor.hendrikx-itc.nl/1optic/rust-ci:1.87.0@sha256:17c29b0721ab6a7d66242f5e2393772c175c3c1579e38ae10e0e2c731f5f953e"

stages:
  - lint
  - test
  - build
  - build-image
  - docs

lint-openapi:
  stage: lint
  image:
    name: redocly/cli@sha256:a2e50da1c3807122c9d2e0d2a83e11ddc1c60b676b50d08b02c5dde8506f3eee
    entrypoint: [""]
  script:
    - redocly lint api-spec/openapi.yaml

lint:
  stage: lint
  script:
    - cargo fmt --check
    - RUSTFLAGS="-Dwarnings" cargo clippy --all-targets --all-features

# Use cargo to test the project
test-minerva-cli:cargo:
  stage: test
  before_script:
    - rustup default nightly
  script:
    - rustc --version && cargo --version  # Print version info for debugging
    - cargo test --package minerva-cli --verbose -- --format=json  -Z unstable-options --report-time | cargo2junit > results.xml
  artifacts:
    when: always
    reports:
      junit: results.xml

integration-test:cargo:
  stage: test
  tags:
    - testcontainers
  before_script:
    - rustup default nightly
  script:
    - rustc --version && cargo --version  # Print version info for debugging
    - cargo build --package minerva-cli
    - cargo build --package minerva-service
    - RUST_LOG=info cargo test --package integration-tests --verbose -- --format=json  -Z unstable-options --report-time --test-threads=1 --nocapture | cargo2junit > results.xml
  artifacts:
    when: always
    reports:
      junit: results.xml

publish-minerva-cli-deb:
  stage: build
  artifacts:
    paths:
      - "target/**/*.deb"
  before_script:
    - echo "$CACERT" > /ca.crt
  script:
    - cargo deb -p minerva-cli --target=x86_64-unknown-linux-musl
    - |
      curl \
      --fail \
      --cacert "/ca.crt" \
      -u "${REPO_USERNAME}:${REPO_PASSWORD}" \
      -H "Content-Type: multipart/form-data" \
      --data-binary "@./target/x86_64-unknown-linux-musl/debian/minerva-cli_${CI_COMMIT_TAG}-1_amd64.deb" \
      "$REPO_URL"
  rules:
    - if: $CI_COMMIT_TAG

build-image:
  stage: build-image
  image:
    name: gcr.io/kaniko-project/executor:debug@sha256:2562c4fe551399514277ffff7dcca9a3b1628c4ea38cb017d7286dc6ea52f4cd
    entrypoint: [""]
  script:
    - mkdir -p /kaniko/.docker
    - echo "{\"auths\":{\"${DOCKER_REGISTRY}\":{\"auth\":\"$(printf "%s:%s" "${DOCKER_REGISTRY_USER}" "${DOCKER_REGISTRY_PASSWORD}" | base64 | tr -d '\n')\"}}}" > /kaniko/.docker/config.json
    - >-
      /kaniko/executor
      --context "${CI_PROJECT_DIR}"
      --dockerfile "${CI_PROJECT_DIR}/Dockerfile"
      --destination "${DOCKER_REGISTRY_IMAGE}:${CI_COMMIT_TAG}"
  rules:
    - if: $CI_COMMIT_TAG

build-docs:
  stage: docs
  script:
    - mdbook build documentation/design
    - rclone version
    - rclone
      --verbose
      --webdav-vendor other
      sync documentation/design/book/ :webdav:/static-sites/minerva/design
  rules:
    - if: $CI_COMMIT_BRANCH == $CI_DEFAULT_BRANCH
      changes:
      - .gitlab-ci.yml
      - documentation/**
